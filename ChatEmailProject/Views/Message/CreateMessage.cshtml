@model ChatEmailProject.Entities.Message

@{
    ViewData["Title"] = "CreateMessage";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="email-left-box">
                        <a href="#" class="btn btn-primary btn-block">Compose</a>
                    </div>

                    <div class="compose-content mt-5">
                        <form method="post" id="messageForm">
                            <div class="form-group">
                                <input type="text" asp-for="RecieverEmail" class="form-control bg-transparent" placeholder="To">
                            </div>
                            <div class="form-group">
                                <input type="text" asp-for="Subject" class="form-control bg-transparent" placeholder="Subject">
                            </div>
                            <div class="form-group">
                                <textarea class="textarea_editor form-control bg-light" asp-for="MessageDetail" rows="15" placeholder="Enter text ..."></textarea>
                            </div>
                            <button type="button" id="sendBtn" class="btn btn-primary">
                                <i class="fa fa-paper-plane"></i> Send
                            </button>
                        </form>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById('sendBtn').addEventListener('click', function () {
            Swal.fire({
                icon: 'success',
                title: 'Message Sent!',
                text: 'Your message will be delivered shortly.',
                showConfirmButton: false,
                timer: 1200  // 1.2 seconds
            });

            // Wait for alert to finish, then submit form
            setTimeout(function () {
                document.getElementById('messageForm').submit();
            }, 1300); // slight delay to let SweetAlert finish
        });
    </script>
}